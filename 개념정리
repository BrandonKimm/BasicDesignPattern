스프링에서 자주 사용되는 디자인 패턴
    자바의 객체지향스러운 특징(캡슐화/상속/추상화/다형성)을 이용해서  객체지향스럽게 설계(SOLID)하는
    실제 현장에서 쓰이고 효율적인 설계방식들을 메뉴얼화 한 것이 디자인패턴이다.
    요리(자바 웹어플리케이션) : 요리도구(캡/상/추/다) : 요리도구의 사용법(SOLID) : 요리레시피(디자인패턴) 

1. Adapter Pattern
    서로 다른 두 인터페이스 사이에 통신이 가능하게 하는 느낌 전에 JDBC 같은 케이스 OCP를 활용한 디자인패턴
    ServiceA.runServiceA() / ServiceB.runServiceB() 각각 메소드 이름이 다른 것을
    AdapterServiceA 클래스에서 ServiceA를 생성함으로써 각각 AdapterServiceA.runService() 같은 메소드명으로 호출
    AdapterServiceA, AdapterServiceB 까지도 AdapterService로 추상화하는 것 까지도 가능하지만 우선은 생략! 

2. Proxy Pattern
    
3. Decorator Pattern

4. Singleton Pattern

5. Template Method Pattern

6. Factory Method Pattern

7. Strategy Pattern

8. Template Callback Pattern

9. etc.. Pattern
